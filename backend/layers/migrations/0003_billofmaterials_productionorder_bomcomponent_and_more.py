# Generated by Django 4.2.7 on 2025-10-17 01:02

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('layers', '0002_order_orderstatushistory_orderitem_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='BillOfMaterials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, help_text='Indicates if the record has been soft deleted')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when the record was soft deleted', null=True)),
                ('name', models.CharField(max_length=200)),
                ('name_ar', models.CharField(blank=True, max_length=200, null=True)),
                ('version', models.CharField(default='1.0', help_text='BOM version for tracking changes', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('expected_quantity', models.DecimalField(decimal_places=3, default=1, help_text='Expected output quantity (can vary in actual production)', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))])),
                ('min_yield', models.DecimalField(blank=True, decimal_places=3, help_text='Minimum expected yield (e.g., 2 cans)', max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))])),
                ('max_yield', models.DecimalField(blank=True, decimal_places=3, help_text='Maximum expected yield (e.g., 3 cans)', max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))])),
                ('estimated_material_cost', models.DecimalField(decimal_places=2, default=0, help_text='Calculated from components', max_digits=15)),
                ('labor_cost', models.DecimalField(decimal_places=2, default=0, help_text='Labor cost per unit', max_digits=15)),
                ('overhead_cost', models.DecimalField(decimal_places=2, default=0, help_text='Overhead cost per unit', max_digits=15)),
                ('product', models.ForeignKey(help_text='Final product that will be assembled', on_delete=django.db.models.deletion.PROTECT, related_name='bom_as_product', to='layers.product')),
            ],
            options={
                'verbose_name': 'Bill of Materials',
                'verbose_name_plural': 'Bills of Materials',
                'db_table': 'bill_of_materials',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductionOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, help_text='Indicates if the record has been soft deleted')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when the record was soft deleted', null=True)),
                ('order_number', models.CharField(max_length=50, unique=True)),
                ('order_type', models.CharField(choices=[('assembly', 'Assembly'), ('disassembly', 'Disassembly')], max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('confirmed', 'Confirmed'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('planned_quantity', models.DecimalField(decimal_places=3, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))])),
                ('actual_quantity', models.DecimalField(decimal_places=3, default=0, help_text='Actual quantity produced (for variable yield)', max_digits=12)),
                ('scheduled_date', models.DateField()),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('material_cost', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('labor_cost', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('overhead_cost', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('notes', models.TextField(blank=True, null=True)),
                ('phase', models.IntegerField(default=0, help_text='Assembly/disassembly phase number')),
                ('bom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='production_orders', to='layers.billofmaterials')),
                ('completed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='completed_production_orders', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_production_orders', to=settings.AUTH_USER_MODEL)),
                ('parent_order', models.ForeignKey(blank=True, help_text='Parent production order for phased disassembly', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child_orders', to='layers.productionorder')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='production_orders', to='layers.product')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='production_orders', to='layers.warehouse')),
            ],
            options={
                'verbose_name': 'Production Order',
                'verbose_name_plural': 'Production Orders',
                'db_table': 'production_orders',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BOMComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, help_text='Indicates if the record has been soft deleted')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when the record was soft deleted', null=True)),
                ('quantity', models.DecimalField(decimal_places=3, help_text='Quantity needed per assembly', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))])),
                ('is_variable', models.BooleanField(default=False, help_text='True for raw materials with unpredictable usage (like mangoes)')),
                ('estimated_quantity', models.DecimalField(blank=True, decimal_places=3, help_text='Estimated quantity if variable', max_digits=12, null=True)),
                ('unit_cost', models.DecimalField(decimal_places=2, default=0, help_text='Cost per unit of this component', max_digits=15)),
                ('notes', models.TextField(blank=True, null=True)),
                ('sequence', models.IntegerField(default=0, help_text='Order of assembly (for phased disassembly)')),
                ('bom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='components', to='layers.billofmaterials')),
                ('component', models.ForeignKey(help_text='Product/Material used as component', on_delete=django.db.models.deletion.PROTECT, related_name='used_in_bom', to='layers.product')),
            ],
            options={
                'verbose_name': 'BOM Component',
                'verbose_name_plural': 'BOM Components',
                'db_table': 'bom_components',
                'ordering': ['sequence', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductionPhase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, help_text='Indicates if the record has been soft deleted')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when the record was soft deleted', null=True)),
                ('phase_number', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('components_snapshot', models.JSONField(default=list, help_text='Snapshot of components used in this phase')),
                ('production_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phases', to='layers.productionorder')),
            ],
            options={
                'verbose_name': 'Production Phase',
                'verbose_name_plural': 'Production Phases',
                'db_table': 'production_phases',
                'ordering': ['phase_number'],
                'indexes': [models.Index(fields=['production_order', 'phase_number'], name='production__product_77e1f6_idx')],
                'unique_together': {('production_order', 'phase_number')},
            },
        ),
        migrations.CreateModel(
            name='ProductionOrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, help_text='Indicates if the record has been soft deleted')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when the record was soft deleted', null=True)),
                ('planned_quantity', models.DecimalField(decimal_places=3, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))])),
                ('actual_quantity', models.DecimalField(decimal_places=3, default=0, help_text='Actual quantity consumed/produced', max_digits=12)),
                ('unit_cost', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_cost', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('reserved', models.BooleanField(default=False)),
                ('reservation_id', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='production_items', to='layers.product')),
                ('production_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='layers.productionorder')),
            ],
            options={
                'verbose_name': 'Production Order Item',
                'verbose_name_plural': 'Production Order Items',
                'db_table': 'production_order_items',
                'ordering': ['created_at'],
                'indexes': [models.Index(fields=['production_order'], name='production__product_d60d5d_idx'), models.Index(fields=['product'], name='production__product_525bb0_idx'), models.Index(fields=['reserved'], name='production__reserve_4efecf_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='productionorder',
            index=models.Index(fields=['order_number'], name='production__order_n_42f4d5_idx'),
        ),
        migrations.AddIndex(
            model_name='productionorder',
            index=models.Index(fields=['status', 'scheduled_date'], name='production__status_969bc5_idx'),
        ),
        migrations.AddIndex(
            model_name='productionorder',
            index=models.Index(fields=['product', 'warehouse'], name='production__product_3cc267_idx'),
        ),
        migrations.AddIndex(
            model_name='productionorder',
            index=models.Index(fields=['order_type', 'status'], name='production__order_t_217914_idx'),
        ),
        migrations.AddIndex(
            model_name='bomcomponent',
            index=models.Index(fields=['bom', 'sequence'], name='bom_compone_bom_id_6fb34e_idx'),
        ),
        migrations.AddIndex(
            model_name='bomcomponent',
            index=models.Index(fields=['component'], name='bom_compone_compone_c72144_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='bomcomponent',
            unique_together={('bom', 'component')},
        ),
        migrations.AddIndex(
            model_name='billofmaterials',
            index=models.Index(fields=['product', 'is_active'], name='bill_of_mat_product_b51ed1_idx'),
        ),
        migrations.AddIndex(
            model_name='billofmaterials',
            index=models.Index(fields=['is_active'], name='bill_of_mat_is_acti_04a066_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='billofmaterials',
            unique_together={('product', 'version')},
        ),
    ]
