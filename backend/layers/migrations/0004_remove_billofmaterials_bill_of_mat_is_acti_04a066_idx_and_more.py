# Generated by Django 4.2.7 on 2025-10-17 20:55

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('layers', '0003_billofmaterials_productionorder_bomcomponent_and_more'),
    ]

    operations = [
        migrations.RemoveIndex(
            model_name='billofmaterials',
            name='bill_of_mat_is_acti_04a066_idx',
        ),
        migrations.RenameIndex(
            model_name='billofmaterials',
            new_name='idx_bom_prod_active',
            old_name='bill_of_mat_product_b51ed1_idx',
        ),
        migrations.RenameIndex(
            model_name='bomcomponent',
            new_name='idx_comp_bom_seq',
            old_name='bom_compone_bom_id_6fb34e_idx',
        ),
        migrations.RenameIndex(
            model_name='bomcomponent',
            new_name='idx_comp_component',
            old_name='bom_compone_compone_c72144_idx',
        ),
        migrations.RenameIndex(
            model_name='contact',
            new_name='idx_contact_type_active',
            old_name='contacts_contact_2efe99_idx',
        ),
        migrations.RenameIndex(
            model_name='contact',
            new_name='idx_contact_code',
            old_name='contacts_code_faab11_idx',
        ),
        migrations.RenameIndex(
            model_name='contact',
            new_name='idx_contact_name',
            old_name='contacts_name_084782_idx',
        ),
        migrations.RenameIndex(
            model_name='product',
            new_name='idx_product_code',
            old_name='products_code_770e3a_idx',
        ),
        migrations.RenameIndex(
            model_name='product',
            new_name='idx_product_name',
            old_name='products_name_6f9890_idx',
        ),
        migrations.RenameIndex(
            model_name='product',
            new_name='idx_product_barcode',
            old_name='products_barcode_d008ac_idx',
        ),
        migrations.RenameIndex(
            model_name='productionorder',
            new_name='idx_prod_order_num',
            old_name='production__order_n_42f4d5_idx',
        ),
        migrations.RenameIndex(
            model_name='productionorder',
            new_name='idx_prod_status_date',
            old_name='production__status_969bc5_idx',
        ),
        migrations.RenameIndex(
            model_name='productionorder',
            new_name='idx_prod_prod_wh',
            old_name='production__product_3cc267_idx',
        ),
        migrations.RenameIndex(
            model_name='productionorder',
            new_name='idx_prod_type_status',
            old_name='production__order_t_217914_idx',
        ),
        migrations.RenameIndex(
            model_name='productionorderitem',
            new_name='idx_prod_item_order',
            old_name='production__product_d60d5d_idx',
        ),
        migrations.RenameIndex(
            model_name='productionorderitem',
            new_name='idx_prod_item_product',
            old_name='production__product_525bb0_idx',
        ),
        migrations.RenameIndex(
            model_name='productionorderitem',
            new_name='idx_prod_item_reserved',
            old_name='production__reserve_4efecf_idx',
        ),
        migrations.RenameIndex(
            model_name='productionphase',
            new_name='idx_phase_order_num',
            old_name='production__product_77e1f6_idx',
        ),
        migrations.RenameIndex(
            model_name='stock',
            new_name='idx_stock_wh_prod',
            old_name='stocks_warehou_d27f09_idx',
        ),
        migrations.RenameIndex(
            model_name='stock',
            new_name='idx_stock_qty',
            old_name='stocks_quantit_bee17c_idx',
        ),
        migrations.RenameIndex(
            model_name='stockmovement',
            new_name='idx_movement_wh_prod',
            old_name='stock_movem_warehou_fa82b1_idx',
        ),
        migrations.RenameIndex(
            model_name='stockmovement',
            new_name='idx_movement_type',
            old_name='stock_movem_movemen_d922c9_idx',
        ),
        migrations.RenameIndex(
            model_name='stockmovement',
            new_name='idx_movement_date',
            old_name='stock_movem_created_07bdcc_idx',
        ),
        migrations.RenameIndex(
            model_name='stockmovement',
            new_name='idx_movement_ref',
            old_name='stock_movem_referen_a0d8b9_idx',
        ),
        migrations.AlterField(
            model_name='billofmaterials',
            name='estimated_material_cost',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Calculated from components', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AlterField(
            model_name='billofmaterials',
            name='is_active',
            field=models.BooleanField(db_index=True, default=True, help_text='Is this BOM active?'),
        ),
        migrations.AlterField(
            model_name='billofmaterials',
            name='labor_cost',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Labor cost per unit', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AlterField(
            model_name='billofmaterials',
            name='max_yield',
            field=models.DecimalField(blank=True, decimal_places=3, help_text='Maximum expected yield (e.g., 3 units)', max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))]),
        ),
        migrations.AlterField(
            model_name='billofmaterials',
            name='min_yield',
            field=models.DecimalField(blank=True, decimal_places=3, help_text='Minimum expected yield (e.g., 2 units)', max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))]),
        ),
        migrations.AlterField(
            model_name='billofmaterials',
            name='name',
            field=models.CharField(db_index=True, help_text='BOM name/description', max_length=200),
        ),
        migrations.AlterField(
            model_name='billofmaterials',
            name='name_ar',
            field=models.CharField(blank=True, help_text='Arabic name (optional)', max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name='billofmaterials',
            name='notes',
            field=models.TextField(blank=True, help_text='Additional notes', null=True),
        ),
        migrations.AlterField(
            model_name='billofmaterials',
            name='overhead_cost',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Overhead cost per unit', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AlterField(
            model_name='billofmaterials',
            name='version',
            field=models.CharField(db_index=True, default='1.0', help_text='BOM version for tracking changes', max_length=50),
        ),
        migrations.AlterField(
            model_name='bomcomponent',
            name='bom',
            field=models.ForeignKey(help_text='Parent BOM', on_delete=django.db.models.deletion.CASCADE, related_name='components', to='layers.billofmaterials'),
        ),
        migrations.AlterField(
            model_name='bomcomponent',
            name='is_variable',
            field=models.BooleanField(default=False, help_text='True for raw materials with unpredictable usage'),
        ),
        migrations.AlterField(
            model_name='bomcomponent',
            name='notes',
            field=models.TextField(blank=True, help_text='Component notes', null=True),
        ),
        migrations.AlterField(
            model_name='bomcomponent',
            name='sequence',
            field=models.IntegerField(db_index=True, default=0, help_text='Order of assembly (for phased disassembly)'),
        ),
        migrations.AlterField(
            model_name='bomcomponent',
            name='unit_cost',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Cost per unit of this component', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AlterField(
            model_name='category',
            name='code',
            field=models.CharField(db_index=True, help_text='Unique category code', max_length=20, unique=True),
        ),
        migrations.AlterField(
            model_name='category',
            name='description',
            field=models.TextField(blank=True, help_text='Category description'),
        ),
        migrations.AlterField(
            model_name='category',
            name='is_active',
            field=models.BooleanField(db_index=True, default=True, help_text='Is this category active?'),
        ),
        migrations.AlterField(
            model_name='category',
            name='name',
            field=models.CharField(db_index=True, help_text='Category name', max_length=200),
        ),
        migrations.AlterField(
            model_name='category',
            name='parent',
            field=models.ForeignKey(blank=True, help_text='Parent category for hierarchical structure', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='layers.category'),
        ),
        migrations.AlterField(
            model_name='contact',
            name='address',
            field=models.TextField(blank=True, help_text='Street address'),
        ),
        migrations.AlterField(
            model_name='contact',
            name='city',
            field=models.CharField(blank=True, db_index=True, help_text='City', max_length=100),
        ),
        migrations.AlterField(
            model_name='contact',
            name='code',
            field=models.CharField(db_index=True, help_text='Unique contact code', max_length=20, unique=True),
        ),
        migrations.AlterField(
            model_name='contact',
            name='contact_person',
            field=models.CharField(blank=True, help_text='Primary contact person name', max_length=100),
        ),
        migrations.AlterField(
            model_name='contact',
            name='contact_person_email',
            field=models.EmailField(blank=True, help_text='Contact person email', max_length=254),
        ),
        migrations.AlterField(
            model_name='contact',
            name='contact_person_phone',
            field=models.CharField(blank=True, help_text='Contact person phone', max_length=20),
        ),
        migrations.AlterField(
            model_name='contact',
            name='contact_type',
            field=models.CharField(choices=[('customer', 'Customer'), ('supplier', 'Supplier'), ('both', 'Both')], db_index=True, default='customer', max_length=10),
        ),
        migrations.AlterField(
            model_name='contact',
            name='country',
            field=models.CharField(blank=True, default='Turkey', help_text='Country', max_length=100),
        ),
        migrations.AlterField(
            model_name='contact',
            name='created_by',
            field=models.ForeignKey(help_text='User who created this contact', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contacts_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='contact',
            name='credit_limit',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Maximum credit allowed', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AlterField(
            model_name='contact',
            name='currency',
            field=models.CharField(default='TRY', help_text='Default currency code (ISO 4217)', max_length=3),
        ),
        migrations.AlterField(
            model_name='contact',
            name='current_balance',
            field=models.DecimalField(db_index=True, decimal_places=2, default=Decimal('0.00'), help_text='Current account balance (+receivable, -payable)', max_digits=15),
        ),
        migrations.AlterField(
            model_name='contact',
            name='email',
            field=models.EmailField(blank=True, db_index=True, help_text='Email address', max_length=254),
        ),
        migrations.AlterField(
            model_name='contact',
            name='is_active',
            field=models.BooleanField(db_index=True, default=True, help_text='Is this contact active?'),
        ),
        migrations.AlterField(
            model_name='contact',
            name='mobile',
            field=models.CharField(blank=True, help_text='Mobile phone number', max_length=20),
        ),
        migrations.AlterField(
            model_name='contact',
            name='name',
            field=models.CharField(db_index=True, help_text='Contact name', max_length=200),
        ),
        migrations.AlterField(
            model_name='contact',
            name='notes',
            field=models.TextField(blank=True, help_text='Additional notes'),
        ),
        migrations.AlterField(
            model_name='contact',
            name='payment_terms',
            field=models.CharField(choices=[('cash', 'Cash'), ('net_15', 'Net 15 Days'), ('net_30', 'Net 30 Days'), ('net_60', 'Net 60 Days'), ('net_90', 'Net 90 Days')], default='cash', help_text='Default payment terms', max_length=10),
        ),
        migrations.AlterField(
            model_name='contact',
            name='phone',
            field=models.CharField(blank=True, help_text='Primary phone number', max_length=20),
        ),
        migrations.AlterField(
            model_name='contact',
            name='postal_code',
            field=models.CharField(blank=True, help_text='Postal/ZIP code', max_length=20),
        ),
        migrations.AlterField(
            model_name='contact',
            name='state',
            field=models.CharField(blank=True, help_text='State/Province', max_length=100),
        ),
        migrations.AlterField(
            model_name='contact',
            name='tax_number',
            field=models.CharField(blank=True, db_index=True, help_text='Tax identification number', max_length=50),
        ),
        migrations.AlterField(
            model_name='contact',
            name='tax_office',
            field=models.CharField(blank=True, help_text='Tax office name', max_length=100),
        ),
        migrations.AlterField(
            model_name='contact',
            name='website',
            field=models.URLField(blank=True, help_text='Company website'),
        ),
        migrations.AlterField(
            model_name='product',
            name='barcode',
            field=models.CharField(blank=True, db_index=True, help_text='Product barcode', max_length=100, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='product',
            name='category',
            field=models.ForeignKey(blank=True, help_text='Product category', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='layers.category'),
        ),
        migrations.AlterField(
            model_name='product',
            name='code',
            field=models.CharField(db_index=True, help_text='Unique product code/SKU', max_length=50, unique=True),
        ),
        migrations.AlterField(
            model_name='product',
            name='cost_price',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Cost/Purchase price per unit', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AlterField(
            model_name='product',
            name='currency',
            field=models.CharField(default='TRY', help_text='Currency code (ISO 4217)', max_length=3),
        ),
        migrations.AlterField(
            model_name='product',
            name='description',
            field=models.TextField(blank=True, help_text='Detailed product description'),
        ),
        migrations.AlterField(
            model_name='product',
            name='height',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Height in cm', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))]),
        ),
        migrations.AlterField(
            model_name='product',
            name='is_active',
            field=models.BooleanField(db_index=True, default=True, help_text='Is this product active?'),
        ),
        migrations.AlterField(
            model_name='product',
            name='length',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Length in cm', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))]),
        ),
        migrations.AlterField(
            model_name='product',
            name='name',
            field=models.CharField(db_index=True, help_text='Product name', max_length=200),
        ),
        migrations.AlterField(
            model_name='product',
            name='sale_price',
            field=models.DecimalField(db_index=True, decimal_places=2, default=Decimal('0.00'), help_text='Selling price per unit', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AlterField(
            model_name='product',
            name='sku',
            field=models.CharField(blank=True, db_index=True, help_text='Stock Keeping Unit', max_length=100),
        ),
        migrations.AlterField(
            model_name='product',
            name='unit',
            field=models.CharField(choices=[('piece', 'Piece'), ('kg', 'Kilogram'), ('gram', 'Gram'), ('liter', 'Liter'), ('meter', 'Meter'), ('cm', 'Centimeter'), ('box', 'Box'), ('package', 'Package')], default='piece', help_text='Unit of measurement', max_length=20),
        ),
        migrations.AlterField(
            model_name='product',
            name='weight',
            field=models.DecimalField(blank=True, decimal_places=3, help_text='Weight in kg', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))]),
        ),
        migrations.AlterField(
            model_name='product',
            name='width',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Width in cm', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))]),
        ),
        migrations.AlterField(
            model_name='productionorder',
            name='actual_quantity',
            field=models.DecimalField(decimal_places=3, default=Decimal('0.00'), help_text='Actual quantity produced (for variable yield)', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AlterField(
            model_name='productionorder',
            name='bom',
            field=models.ForeignKey(blank=True, help_text='Bill of Materials used', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='production_orders', to='layers.billofmaterials'),
        ),
        migrations.AlterField(
            model_name='productionorder',
            name='completed_at',
            field=models.DateTimeField(blank=True, help_text='Actual completion time', null=True),
        ),
        migrations.AlterField(
            model_name='productionorder',
            name='completed_by',
            field=models.ForeignKey(blank=True, help_text='User who completed this order', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='production_orders_completed', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='productionorder',
            name='created_by',
            field=models.ForeignKey(help_text='User who created this order', on_delete=django.db.models.deletion.PROTECT, related_name='production_orders_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='productionorder',
            name='labor_cost',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total labor cost', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AlterField(
            model_name='productionorder',
            name='material_cost',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total material cost', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AlterField(
            model_name='productionorder',
            name='notes',
            field=models.TextField(blank=True, help_text='Production notes', null=True),
        ),
        migrations.AlterField(
            model_name='productionorder',
            name='order_number',
            field=models.CharField(db_index=True, help_text='Unique production order number', max_length=50, unique=True),
        ),
        migrations.AlterField(
            model_name='productionorder',
            name='order_type',
            field=models.CharField(choices=[('assembly', 'Assembly'), ('disassembly', 'Disassembly')], db_index=True, help_text='Assembly or Disassembly', max_length=20),
        ),
        migrations.AlterField(
            model_name='productionorder',
            name='overhead_cost',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total overhead cost', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AlterField(
            model_name='productionorder',
            name='planned_quantity',
            field=models.DecimalField(decimal_places=3, help_text='Planned production quantity', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))]),
        ),
        migrations.AlterField(
            model_name='productionorder',
            name='product',
            field=models.ForeignKey(help_text='Product being produced/disassembled', on_delete=django.db.models.deletion.PROTECT, related_name='production_orders', to='layers.product'),
        ),
        migrations.AlterField(
            model_name='productionorder',
            name='scheduled_date',
            field=models.DateField(db_index=True, help_text='Scheduled production date'),
        ),
        migrations.AlterField(
            model_name='productionorder',
            name='started_at',
            field=models.DateTimeField(blank=True, help_text='Actual start time', null=True),
        ),
        migrations.AlterField(
            model_name='productionorder',
            name='status',
            field=models.CharField(choices=[('draft', 'Draft'), ('confirmed', 'Confirmed'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], db_index=True, default='draft', help_text='Current order status', max_length=20),
        ),
        migrations.AlterField(
            model_name='productionorder',
            name='warehouse',
            field=models.ForeignKey(help_text='Warehouse for production', on_delete=django.db.models.deletion.PROTECT, related_name='production_orders', to='layers.warehouse'),
        ),
        migrations.AlterField(
            model_name='productionorderitem',
            name='actual_quantity',
            field=models.DecimalField(decimal_places=3, default=Decimal('0.00'), help_text='Actual quantity consumed/produced', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AlterField(
            model_name='productionorderitem',
            name='notes',
            field=models.TextField(blank=True, help_text='Item notes', null=True),
        ),
        migrations.AlterField(
            model_name='productionorderitem',
            name='planned_quantity',
            field=models.DecimalField(decimal_places=3, help_text='Planned quantity', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))]),
        ),
        migrations.AlterField(
            model_name='productionorderitem',
            name='product',
            field=models.ForeignKey(help_text='Component product', on_delete=django.db.models.deletion.PROTECT, related_name='production_items', to='layers.product'),
        ),
        migrations.AlterField(
            model_name='productionorderitem',
            name='production_order',
            field=models.ForeignKey(help_text='Production order', on_delete=django.db.models.deletion.CASCADE, related_name='items', to='layers.productionorder'),
        ),
        migrations.AlterField(
            model_name='productionorderitem',
            name='reservation_id',
            field=models.CharField(blank=True, help_text='Reservation identifier', max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='productionorderitem',
            name='reserved',
            field=models.BooleanField(db_index=True, default=False, help_text='Is stock reserved?'),
        ),
        migrations.AlterField(
            model_name='productionorderitem',
            name='total_cost',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total cost for this item', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AlterField(
            model_name='productionorderitem',
            name='unit_cost',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Cost per unit', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AlterField(
            model_name='productionphase',
            name='completed_at',
            field=models.DateTimeField(blank=True, help_text='Phase completion time', null=True),
        ),
        migrations.AlterField(
            model_name='productionphase',
            name='description',
            field=models.TextField(blank=True, help_text='Phase description', null=True),
        ),
        migrations.AlterField(
            model_name='productionphase',
            name='name',
            field=models.CharField(help_text='Phase name', max_length=200),
        ),
        migrations.AlterField(
            model_name='productionphase',
            name='phase_number',
            field=models.IntegerField(db_index=True, help_text='Phase number (1, 2, 3, etc.)'),
        ),
        migrations.AlterField(
            model_name='productionphase',
            name='production_order',
            field=models.ForeignKey(help_text='Production order', on_delete=django.db.models.deletion.CASCADE, related_name='phases', to='layers.productionorder'),
        ),
        migrations.AlterField(
            model_name='productionphase',
            name='started_at',
            field=models.DateTimeField(blank=True, help_text='Phase start time', null=True),
        ),
        migrations.AlterField(
            model_name='productionphase',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed')], db_index=True, default='pending', help_text='Phase status', max_length=20),
        ),
        migrations.AlterField(
            model_name='stock',
            name='location',
            field=models.CharField(blank=True, db_index=True, help_text='Shelf/Bin location within warehouse', max_length=100),
        ),
        migrations.AlterField(
            model_name='stock',
            name='max_quantity',
            field=models.DecimalField(decimal_places=3, default=Decimal('0.00'), help_text='Maximum stock level', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AlterField(
            model_name='stock',
            name='min_quantity',
            field=models.DecimalField(decimal_places=3, default=Decimal('0.00'), help_text='Minimum stock level (reorder point)', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AlterField(
            model_name='stock',
            name='product',
            field=models.ForeignKey(help_text='Product', on_delete=django.db.models.deletion.CASCADE, related_name='stocks', to='layers.product'),
        ),
        migrations.AlterField(
            model_name='stock',
            name='quantity',
            field=models.DecimalField(db_index=True, decimal_places=3, default=Decimal('0.00'), help_text='Current stock quantity', max_digits=15),
        ),
        migrations.AlterField(
            model_name='stock',
            name='reserved_quantity',
            field=models.DecimalField(decimal_places=3, default=Decimal('0.00'), help_text='Quantity reserved for orders', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AlterField(
            model_name='stock',
            name='warehouse',
            field=models.ForeignKey(help_text='Warehouse location', on_delete=django.db.models.deletion.CASCADE, related_name='stocks', to='layers.warehouse'),
        ),
        migrations.AlterField(
            model_name='stockmovement',
            name='created_by',
            field=models.ForeignKey(help_text='User who created this movement', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_movements_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='stockmovement',
            name='from_warehouse',
            field=models.ForeignKey(blank=True, help_text='Source warehouse for transfers', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transfers_out', to='layers.warehouse'),
        ),
        migrations.AlterField(
            model_name='stockmovement',
            name='movement_type',
            field=models.CharField(choices=[('in', 'Stock In'), ('out', 'Stock Out'), ('transfer', 'Transfer'), ('adjustment', 'Adjustment'), ('production', 'Production'), ('return', 'Return')], db_index=True, help_text='Type of movement', max_length=20),
        ),
        migrations.AlterField(
            model_name='stockmovement',
            name='notes',
            field=models.TextField(blank=True, help_text='Movement notes'),
        ),
        migrations.AlterField(
            model_name='stockmovement',
            name='product',
            field=models.ForeignKey(help_text='Product', on_delete=django.db.models.deletion.CASCADE, related_name='movements', to='layers.product'),
        ),
        migrations.AlterField(
            model_name='stockmovement',
            name='quantity',
            field=models.DecimalField(decimal_places=3, help_text='Quantity moved (positive for IN, negative for OUT)', max_digits=15),
        ),
        migrations.AlterField(
            model_name='stockmovement',
            name='quantity_after',
            field=models.DecimalField(decimal_places=3, default=Decimal('0.00'), help_text='Quantity after movement', max_digits=15),
        ),
        migrations.AlterField(
            model_name='stockmovement',
            name='quantity_before',
            field=models.DecimalField(decimal_places=3, default=Decimal('0.00'), help_text='Quantity before movement', max_digits=15),
        ),
        migrations.AlterField(
            model_name='stockmovement',
            name='reference_id',
            field=models.IntegerField(blank=True, db_index=True, help_text='ID of source document', null=True),
        ),
        migrations.AlterField(
            model_name='stockmovement',
            name='reference_number',
            field=models.CharField(blank=True, db_index=True, help_text='Document number for reference', max_length=50),
        ),
        migrations.AlterField(
            model_name='stockmovement',
            name='reference_type',
            field=models.CharField(blank=True, db_index=True, help_text='Type of source document (invoice, order, production, etc.)', max_length=50),
        ),
        migrations.AlterField(
            model_name='stockmovement',
            name='to_warehouse',
            field=models.ForeignKey(blank=True, help_text='Destination warehouse for transfers', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transfers_in', to='layers.warehouse'),
        ),
        migrations.AlterField(
            model_name='stockmovement',
            name='warehouse',
            field=models.ForeignKey(help_text='Warehouse', on_delete=django.db.models.deletion.CASCADE, related_name='movements', to='layers.warehouse'),
        ),
        migrations.AlterField(
            model_name='user',
            name='address',
            field=models.TextField(blank=True, help_text='Full address'),
        ),
        migrations.AlterField(
            model_name='user',
            name='avatar',
            field=models.ImageField(blank=True, help_text='Profile picture', null=True, upload_to='avatars/'),
        ),
        migrations.AlterField(
            model_name='user',
            name='department',
            field=models.CharField(blank=True, db_index=True, help_text='Department or division', max_length=50),
        ),
        migrations.AlterField(
            model_name='user',
            name='join_date',
            field=models.DateField(blank=True, db_index=True, help_text='Date of joining the company', null=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='phone',
            field=models.CharField(blank=True, help_text='Contact phone number', max_length=20),
        ),
        migrations.AlterField(
            model_name='user',
            name='role',
            field=models.CharField(choices=[('manager', 'Manager'), ('accountant', 'Accountant'), ('sales', 'Sales'), ('warehouse_manager', 'Warehouse Manager')], db_index=True, default='sales', help_text='User role for access control', max_length=20),
        ),
        migrations.AlterField(
            model_name='user',
            name='salary',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Monthly salary', max_digits=10),
        ),
        migrations.AlterField(
            model_name='warehouse',
            name='address',
            field=models.TextField(blank=True, help_text='Street address'),
        ),
        migrations.AlterField(
            model_name='warehouse',
            name='city',
            field=models.CharField(blank=True, db_index=True, help_text='City', max_length=100),
        ),
        migrations.AlterField(
            model_name='warehouse',
            name='code',
            field=models.CharField(db_index=True, help_text='Unique warehouse code', max_length=20, unique=True),
        ),
        migrations.AlterField(
            model_name='warehouse',
            name='country',
            field=models.CharField(blank=True, default='Turkey', help_text='Country', max_length=100),
        ),
        migrations.AlterField(
            model_name='warehouse',
            name='email',
            field=models.EmailField(blank=True, help_text='Contact email', max_length=254),
        ),
        migrations.AlterField(
            model_name='warehouse',
            name='is_active',
            field=models.BooleanField(db_index=True, default=True, help_text='Is this warehouse active?'),
        ),
        migrations.AlterField(
            model_name='warehouse',
            name='is_default',
            field=models.BooleanField(db_index=True, default=False, help_text='Default warehouse for new transactions'),
        ),
        migrations.AlterField(
            model_name='warehouse',
            name='manager_name',
            field=models.CharField(blank=True, help_text='Warehouse manager name', max_length=100),
        ),
        migrations.AlterField(
            model_name='warehouse',
            name='name',
            field=models.CharField(db_index=True, help_text='Warehouse name', max_length=200),
        ),
        migrations.AlterField(
            model_name='warehouse',
            name='notes',
            field=models.TextField(blank=True, help_text='Additional notes'),
        ),
        migrations.AlterField(
            model_name='warehouse',
            name='phone',
            field=models.CharField(blank=True, help_text='Contact phone', max_length=20),
        ),
        migrations.AlterField(
            model_name='warehouse',
            name='postal_code',
            field=models.CharField(blank=True, help_text='Postal code', max_length=20),
        ),
        migrations.AddIndex(
            model_name='billofmaterials',
            index=models.Index(fields=['is_active', '-created_at'], name='idx_bom_active_date'),
        ),
        migrations.AddIndex(
            model_name='billofmaterials',
            index=models.Index(fields=['version'], name='idx_bom_version'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['parent', 'is_active'], name='idx_category_parent_active'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['is_active', 'name'], name='idx_category_active_name'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['email'], name='idx_contact_email'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['tax_number'], name='idx_contact_tax'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['current_balance'], name='idx_contact_balance'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['city', 'is_active'], name='idx_contact_city_active'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['sku'], name='idx_product_sku'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['is_active'], name='idx_product_active'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['category', 'is_active'], name='idx_product_cat_active'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['sale_price'], name='idx_product_price'),
        ),
        migrations.AddIndex(
            model_name='productionorder',
            index=models.Index(fields=['scheduled_date'], name='idx_prod_sched_date'),
        ),
        migrations.AddIndex(
            model_name='productionphase',
            index=models.Index(fields=['status'], name='idx_phase_status'),
        ),
        migrations.AddIndex(
            model_name='stock',
            index=models.Index(fields=['product', 'quantity'], name='idx_stock_prod_qty'),
        ),
        migrations.AddIndex(
            model_name='stock',
            index=models.Index(fields=['location'], name='idx_stock_location'),
        ),
        migrations.AddIndex(
            model_name='stockmovement',
            index=models.Index(fields=['product', '-created_at'], name='idx_movement_prod_date'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['role', 'is_active'], name='idx_user_role_active'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['department', 'is_active'], name='idx_user_dept_active'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['join_date'], name='idx_user_join_date'),
        ),
        migrations.AddIndex(
            model_name='warehouse',
            index=models.Index(fields=['is_active', 'is_default'], name='idx_wh_active_default'),
        ),
        migrations.AddIndex(
            model_name='warehouse',
            index=models.Index(fields=['city', 'is_active'], name='idx_wh_city_active'),
        ),
        migrations.AddConstraint(
            model_name='billofmaterials',
            constraint=models.CheckConstraint(check=models.Q(('expected_quantity__gt', 0)), name='bom_expected_qty_positive'),
        ),
        migrations.AddConstraint(
            model_name='billofmaterials',
            constraint=models.CheckConstraint(check=models.Q(('estimated_material_cost__gte', 0)), name='bom_material_cost_positive'),
        ),
        migrations.AddConstraint(
            model_name='bomcomponent',
            constraint=models.CheckConstraint(check=models.Q(('quantity__gt', 0)), name='comp_quantity_positive'),
        ),
        migrations.AddConstraint(
            model_name='bomcomponent',
            constraint=models.CheckConstraint(check=models.Q(('unit_cost__gte', 0)), name='comp_cost_positive'),
        ),
        migrations.AddConstraint(
            model_name='contact',
            constraint=models.CheckConstraint(check=models.Q(('credit_limit__gte', 0)), name='contact_credit_limit_positive'),
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.CheckConstraint(check=models.Q(('sale_price__gte', 0)), name='product_sale_price_positive'),
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.CheckConstraint(check=models.Q(('cost_price__gte', 0)), name='product_cost_price_positive'),
        ),
        migrations.AddConstraint(
            model_name='productionorder',
            constraint=models.CheckConstraint(check=models.Q(('planned_quantity__gt', 0)), name='prod_planned_qty_positive'),
        ),
        migrations.AddConstraint(
            model_name='productionorder',
            constraint=models.CheckConstraint(check=models.Q(('actual_quantity__gte', 0)), name='prod_actual_qty_positive'),
        ),
        migrations.AddConstraint(
            model_name='productionorderitem',
            constraint=models.CheckConstraint(check=models.Q(('planned_quantity__gt', 0)), name='prod_item_planned_positive'),
        ),
        migrations.AddConstraint(
            model_name='productionorderitem',
            constraint=models.CheckConstraint(check=models.Q(('actual_quantity__gte', 0)), name='prod_item_actual_positive'),
        ),
        migrations.AddConstraint(
            model_name='stock',
            constraint=models.CheckConstraint(check=models.Q(('reserved_quantity__gte', 0)), name='stock_reserved_positive'),
        ),
        migrations.AddConstraint(
            model_name='stock',
            constraint=models.CheckConstraint(check=models.Q(('reserved_quantity__lte', models.F('quantity'))), name='stock_reserved_not_exceed_quantity'),
        ),
        migrations.AddConstraint(
            model_name='stock',
            constraint=models.CheckConstraint(check=models.Q(('min_quantity__gte', 0)), name='stock_min_positive'),
        ),
        migrations.AddConstraint(
            model_name='stock',
            constraint=models.CheckConstraint(check=models.Q(('max_quantity__gte', 0)), name='stock_max_positive'),
        ),
    ]
